---
# ============================
# Install Keepalived
# ============================

- name: "Count the number of master nodes"
  set_fact:
    master_count: "{{ groups['master'] | length | int }}"
  run_once: true

- name: "Ensure master_count is defined on all nodes"
  set_fact:
    master_count: "{{ master_count | default(0) }}"

- name: "Detect the primary network interface"
  set_fact:
    keepalived_network: "{{ ansible_default_ipv4.interface }}"

- name: "Debug detected network interface"
  debug:
    msg: "Detected primary network interface: {{ keepalived_network }}"

- name: "Keepalived Debug Master Count"
  debug:
    msg: "Master Count is {{ master_count }}."
  run_once: true

- name: "Skip Keepalived installation if HA is not needed"
  debug:
    msg: "Not enough master nodes ({{ master_count }} < 3). Skipping HA K3s installation."
  when: master_count | int < 3
  run_once: true

- name: "Proceed with HA setup if there are at least 3 master nodes"
  debug:
    msg: "HA mode detected ({{ master_count }} masters). Proceeding with Keepalived installation."
  when: master_count | int >= 3
  run_once: true

- name: "Install and Configure Keepalived if there are at least 3 masters"
  block:

    - name: Update apt cache before installing Keepalived
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Keepalived on Debian-based systems
      apt:
        name: keepalived
        state: present
      when: ansible_os_family == "Debian"
      register: keepalived_debian

    - name: Debug Keepalived installation on Debian
      debug:
        msg: "Keepalived installed on Debian-based system with result: {{ keepalived_debian }}"
      when: ansible_os_family == "Debian"

    - name: Install Keepalived on RedHat-based systems
      yum:
        name: keepalived
        state: present
      when: ansible_os_family == "RedHat"
      register: keepalived_redhat

    - name: Debug Keepalived installation on RedHat
      debug:
        msg: "Keepalived installed on RedHat-based system with result: {{ keepalived_redhat }}"
      when: ansible_os_family == "RedHat"

    - name: Ensure keepalived_script user is present
      user:
        name: keepalived_script
        system: yes
        shell: /usr/sbin/nologin

    - name: Set ownership for pidof
      file:
        path: /usr/bin/pidof
        owner: keepalived_script
        mode: '0755'
      become: true

# ============================
# Configure Keepalived
# ============================

    - name: Configure Keepalived for first master node
      template:
        src: keepalived-master.j2
        dest: /etc/keepalived/keepalived.conf
      when: inventory_hostname == groups['master'][0]
      register: keepalived_config_master

    - name: Configure Keepalived for other masters
      template:
        src: keepalived-backup.j2
        dest: /etc/keepalived/keepalived.conf
      when: inventory_hostname != groups['master'][0]
      register: keepalived_config_backup

    - name: Debug Keepalived configuration for first master
      debug:
        msg: "Keepalived master configuration result: {{ keepalived_config_master }}"
      when: inventory_hostname == groups['master'][0]

    - name: Debug Keepalived configuration for other masters
      debug:
        msg: "Keepalived backup configuration result: {{ keepalived_config_backup }}"
      when: inventory_hostname != groups['master'][0]

    - name: Verify Keepalived configuration file
      command: cat /etc/keepalived/keepalived.conf
      register: keepalived_conf_content

    - name: Debug Keepalived configuration file content
      debug:
        msg: "Keepalived configuration file content: {{ keepalived_conf_content.stdout }}"

    - name: Start and enable Keepalived
      systemd:
        name: keepalived
        enabled: true
        state: started
      become: true

    - name: Check Keepalived service status
      command: systemctl status keepalived
      register: keepalived_status

    - name: Extract Keepalived service active status
      set_fact:
        keepalived_active_status: "{{ keepalived_status.stdout | regex_search('Active:.*') }}"

    - name: Debug Keepalived service active status
      debug:
        msg: "Keepalived service status: {{ keepalived_active_status }}"

  when: master_count | int >= 3
